name: Roll KDF Version

on:
  schedule:
    # Run daily at midnight (UTC)
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to check for rolls (dev or main)"
        required: false
        default: ""
        type: string

jobs:
  check-for-updates:
    runs-on: ubuntu-latest
    outputs:
      has_updates: ${{ steps.check-updates.outputs.has_updates }}
      branch: ${{ steps.determine-branch.outputs.branch }}
      current_commit: ${{ steps.check-updates.outputs.current_commit }}
      new_commit: ${{ steps.check-updates.outputs.new_commit }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          # NB! Keep up-to-date with the flutter version used for development
          flutter-version: "3.x"
          channel: "stable"

      - name: Install dependencies
        run: |
          cd packages/komodo_wallet_cli
          dart pub get

      - name: Determine branch from config
        id: determine-branch
        run: |
          BRANCH=$(cat packages/komodo_defi_framework/app_build/build_config.json | jq -r '.api.branch')
          # If workflow dispatch provided a branch, use that instead
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.branch }}" ]]; then
            BRANCH="${{ github.event.inputs.branch }}"
          fi
          echo "Using branch: $BRANCH"
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Check for updates using Dart CLI utility
        id: check-updates
        run: |
          BRANCH="${{ steps.determine-branch.outputs.branch }}"
          cd packages/komodo_wallet_cli
          RESULT=$(dart bin/update_api_config.dart \
            --branch "$BRANCH" \
            --config ../komodo_defi_framework/app_build/build_config.json \
            --verbose | grep "Current commit\|Latest commit")

          CURRENT_COMMIT=$(echo "$RESULT" | grep "Current commit" | cut -d':' -f2 | xargs)
          NEW_COMMIT=$(echo "$RESULT" | grep "Latest commit" | cut -d':' -f2 | xargs)

          echo "Current commit: $CURRENT_COMMIT"
          echo "Latest commit: $NEW_COMMIT"

          if [[ "$CURRENT_COMMIT" != "$NEW_COMMIT" ]]; then
            echo "New commit found!"
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "new_commit=$NEW_COMMIT" >> $GITHUB_OUTPUT
            echo "current_commit=$CURRENT_COMMIT" >> $GITHUB_OUTPUT
          else
            echo "No updates available."
            echo "has_updates=false" >> $GITHUB_OUTPUT
          fi

  roll-kdf-version:
    needs: check-for-updates
    if: ${{ needs.check-for-updates.outputs.has_updates == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Dart SDK
        uses: dart-lang/setup-dart@v1

      - name: Install dependencies
        run: |
          cd packages/komodo_wallet_cli
          dart pub get

      - name: Create branch for roll
        run: |
          BRANCH="${{ needs.check-for-updates.outputs.branch }}"
          NEW_COMMIT="${{ needs.check-for-updates.outputs.new_commit }}"
          SHORT_COMMIT="${NEW_COMMIT:0:7}"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          git checkout -b chore/kdf-roll/$BRANCH-$SHORT_COMMIT

      - name: Roll KDF version
        id: roll-version
        run: |
          BRANCH="${{ needs.check-for-updates.outputs.branch }}"

          echo "Running update_api_config tool with auto-roll..."
          cd packages/komodo_wallet_cli
          mkdir -p ../komodo_defi_framework/app_build/temp_downloads

          # Use the new auto-roll functionality but skip validation in CI
          if dart bin/update_api_config.dart \
            --auto-roll \
            --branch "$BRANCH" \
            --config ../komodo_defi_framework/app_build/build_config.json \
            --output-dir ../komodo_defi_framework/app_build/temp_downloads \
            --verbose; then
            
            echo "Successfully rolled KDF version"
          else
            echo "Failed to roll KDF version. Exiting with error."
            exit 1
          fi

      - name: Commit changes
        run: |
          BRANCH="${{ needs.check-for-updates.outputs.branch }}"
          NEW_COMMIT="${{ needs.check-for-updates.outputs.new_commit }}"
          SHORT_COMMIT="${NEW_COMMIT:0:7}"

          # Check if there are changes to commit
          if git diff --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git add packages/komodo_defi_framework/app_build/build_config.json
          git commit -m "chore: roll KDF version to commit $SHORT_COMMIT for branch $BRANCH"

      # Validation is now handled by the Dart CLI auto-roll functionality

      - name: Push changes
        run: |
          BRANCH="${{ needs.check-for-updates.outputs.branch }}"
          NEW_COMMIT="${{ needs.check-for-updates.outputs.new_commit }}"
          SHORT_COMMIT="${NEW_COMMIT:0:7}"

          git push origin chore/kdf-roll/$BRANCH-$SHORT_COMMIT --force
          echo "Changes pushed to branch chore/kdf-roll/$BRANCH-$SHORT_COMMIT"

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH="${{ needs.check-for-updates.outputs.branch }}"
          NEW_COMMIT="${{ needs.check-for-updates.outputs.new_commit }}"
          SHORT_COMMIT="${NEW_COMMIT:0:7}"

          PR_TITLE="chore: roll KDF version to commit $SHORT_COMMIT for branch $BRANCH"
          PR_BODY="This PR rolls the KDF version to the latest commit ($SHORT_COMMIT) for the '$BRANCH' branch.

          **Changes:**
          - Rolled KDF version from \`${{ needs.check-for-updates.outputs.current_commit }}\` to \`$NEW_COMMIT\`

          This PR was automatically generated by GitHub Actions."

          gh pr create \
            --title "$PR_TITLE" \
            --body "$PR_BODY" \
            --base "$BRANCH" \
            --head "chore/kdf-roll/$BRANCH-$SHORT_COMMIT"
